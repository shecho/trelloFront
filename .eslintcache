[{"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\index.js":"1","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\reportWebVitals.js":"2","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\App.js":"3","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\boards\\boards.jsx":"4","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\register\\register.jsx":"5","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\nav\\nav.jsx":"6","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\sortableContainer\\sortableComponent.jsx":"7","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\users\\user.jsx":"8","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\login\\login.jsx":"9","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\home\\home.jsx":"10","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\boards\\board.jsx":"11","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\boards\\boardDetail.jsx":"12","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\lists\\list.jsx":"13"},{"size":517,"mtime":1607981755659,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1607981755660,"results":"16","hashOfConfig":"15"},{"size":1994,"mtime":1608174522144,"results":"17","hashOfConfig":"15"},{"size":682,"mtime":1608173114669,"results":"18","hashOfConfig":"15"},{"size":1374,"mtime":1608098245231,"results":"19","hashOfConfig":"15"},{"size":1132,"mtime":1608168896187,"results":"20","hashOfConfig":"15"},{"size":1045,"mtime":1608098511294,"results":"21","hashOfConfig":"15"},{"size":1828,"mtime":1608098245233,"results":"22","hashOfConfig":"15"},{"size":1160,"mtime":1607981755655,"results":"23","hashOfConfig":"15"},{"size":263,"mtime":1608173281774,"results":"24","hashOfConfig":"15"},{"size":1311,"mtime":1608169861895,"results":"25","hashOfConfig":"15"},{"size":1140,"mtime":1608172096935,"results":"26","hashOfConfig":"15"},{"size":1448,"mtime":1608170409319,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qkescv",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\index.js",[],["58","59"],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\reportWebVitals.js",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\App.js",["60"],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\boards\\boards.jsx",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\register\\register.jsx",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\nav\\nav.jsx",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\sortableContainer\\sortableComponent.jsx",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\users\\user.jsx",["61","62","63"],"import React, { useState, useEffect } from \"react\";\r\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport arrayMove from \"array-move\";\r\nfunction User() {\r\n  const [user, setUser] = useState(\"\");\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n  const getUser = async () => {\r\n    let url = `http://127.0.0.1:8000/users/api/v1/3/`;\r\n\r\n    let response = await fetch(url);\r\n    let res = await response.json();\r\n    console.log(res);\r\n    setUser(() => res);\r\n    console.log(user);\r\n  };\r\n\r\nconst SortableItem = SortableElement(({value}) => <li>{value}</li>)\r\n\r\nconst SortableList = SortableContainer(({items}) => {\r\n  return (\r\n    <ul>\r\n      {items.map((value, index) => (\r\n        <SortableItem key={`item-${value}`} index={index} value={value} />\r\n      ))}\r\n    </ul>\r\n  );\r\n});\r\n\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <div className=\"card bg-dark text-light\">\r\n        <p>{user.name}</p>\r\n        <p>{user.lastname}</p>\r\n        <p>{user.email}</p>\r\n      </div>\r\n      <div className=\"card bg-dark text-light\">\r\n        <p>{user.name}</p>\r\n        <p>{user.lastname}</p>\r\n        <p>{user.email}</p>\r\n      </div>\r\n      <div className=\"card bg-dark text-light\">\r\n        <p>{user.name}</p>\r\n        <p>{user.lastname}</p>\r\n        <p>{user.email}</p>\r\n      </div>\r\n      <div className=\"card bg-dark text-light\">\r\n        <p>{user.name}</p>\r\n        <p>{user.lastname}</p>\r\n        <p>{user.email}</p>\r\n      </div>\r\n      <div className=\"card bg-dark text-light\">\r\n        <p>{user.name}</p>\r\n        <p>{user.lastname}</p>\r\n        <p>{user.email}</p>\r\n      </div>\r\n      <div className=\"card bg-dark text-light\">\r\n        <p>{user.name}</p>\r\n        <p>{user.lastname}</p>\r\n        <p>{user.email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\login\\login.jsx",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\home\\home.jsx",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\boards\\board.jsx",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\boards\\boardDetail.jsx",["64","65","66"],"import React, { useState, useEffect } from \"react\";\r\nimport './boards.css'\r\n\r\n// import arrayMove from 'array-move';\r\nimport List from '../lists/list'\r\n\r\nconst BoardDetail = () => {\r\n  const [list, setList] = useState([]);\r\n  const [cards, setCards] = useState([]);\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n\r\n\r\n  // const getCards = async (id) => {\r\n  //   let url = `http://127.0.0.1:8000/list/${id}/cards`;\r\n  //   let response = await fetch(url);\r\n  //   console.log(response);\r\n  //   let res = await response.json();\r\n  //   console.log(res.results);\r\n  //   setCards(() => res.results);\r\n  //   console.log(cards);\r\n  // };\r\n  const getList = async () => {\r\n    let url = \"http://127.0.0.1:8000/list/\";\r\n    let response = await fetch(url);\r\n    console.log(response);\r\n    let res = await response.json();\r\n    console.log(res.results);\r\n    setList(() => res.results);\r\n    console.log(list);\r\n  };\r\n\r\n  return (\r\n    <div className=\"blanco\">\r\n        {list.map((list) => {\r\n          return (\r\n            <List list={list} key={list.id}/>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default BoardDetail;\r\n","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\lists\\list.jsx",["67"],"import React from \"react\";\r\n\r\nconst List = (props) => {\r\n  const { id, position, name, members } = props.list;\r\n  return (\r\n    <div className=\"text-center\" key={id}>\r\n      <div className=\"card bg-dark text-light\">\r\n          <h5 className=\"card-title \"> <span className='dx-2'> NÂ°{position}</span> {name}</h5>\r\n        <div className=\"d-flex justify-content-center p-2 \">\r\n          <div className=\"m-2\">\r\n            <i className=\"fa fa-plus-circle text-success\" aria-hidden=\"true\" />\r\n          </div>\r\n          <div className=\"m-2\">\r\n            <i className=\"fa fa-trash text-danger\" aria-hidden=\"true\" />\r\n          </div>\r\n          <div className=\"d-flex justify-content-end p-2 \">\r\n            <i className=\"fa fa-ellipsis-h \" aria-hidden=\"true\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          \r\n          <div className=\"justify-content-center \">\r\n            <div>\r\n            card\r\n            </div>\r\n            <div>\r\n            card\r\n            </div>\r\n            <div>\r\n            card\r\n            </div>\r\n            <div>\r\n            card\r\n            </div>\r\n            <div>\r\n            card\r\n            </div>\r\n            <div>\r\n            card\r\n            </div>\r\n            <div>\r\n            card\r\n            </div>\r\n            <div>\r\n            card\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":8,"nodeType":"74","messageId":"75","endLine":9,"endColumn":25},{"ruleId":"72","severity":1,"message":"76","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":17},{"ruleId":"77","severity":1,"message":"78","line":8,"column":6,"nodeType":"79","endLine":8,"endColumn":8,"suggestions":"80"},{"ruleId":"72","severity":1,"message":"81","line":21,"column":7,"nodeType":"74","messageId":"75","endLine":21,"endColumn":19},{"ruleId":"72","severity":1,"message":"82","line":9,"column":10,"nodeType":"74","messageId":"75","endLine":9,"endColumn":15},{"ruleId":"72","severity":1,"message":"83","line":9,"column":17,"nodeType":"74","messageId":"75","endLine":9,"endColumn":25},{"ruleId":"77","severity":1,"message":"84","line":12,"column":6,"nodeType":"79","endLine":12,"endColumn":8,"suggestions":"85"},{"ruleId":"72","severity":1,"message":"86","line":4,"column":31,"nodeType":"74","messageId":"75","endLine":4,"endColumn":38},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'SortableContainer' is defined but never used.","Identifier","unusedVar","'arrayMove' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'SortableList' is assigned a value but never used.","'cards' is assigned a value but never used.","'setCards' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["90"],"'members' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [getUser]",{"range":"95","text":"96"},"Update the dependencies array to be: [getList]",{"range":"97","text":"98"},[264,266],"[getUser]",[309,311],"[getList]"]