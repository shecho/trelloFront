[{"/home/shecho/PycharmProjects/trellofront/src/index.js":"1","/home/shecho/PycharmProjects/trellofront/src/App.js":"2","/home/shecho/PycharmProjects/trellofront/src/reportWebVitals.js":"3","/home/shecho/PycharmProjects/trellofront/src/components/home/home.jsx":"4","/home/shecho/PycharmProjects/trellofront/src/components/login/login.jsx":"5","/home/shecho/PycharmProjects/trellofront/src/components/sortableContainer/sortableComponent.jsx":"6","/home/shecho/PycharmProjects/trellofront/src/components/register/register.jsx":"7","/home/shecho/PycharmProjects/trellofront/src/components/users/user.jsx":"8","/home/shecho/PycharmProjects/trellofront/src/components/boards/boardDetail.jsx":"9","/home/shecho/PycharmProjects/trellofront/src/components/boards/boards.jsx":"10","/home/shecho/PycharmProjects/trellofront/src/components/nav/nav.jsx":"11","/home/shecho/PycharmProjects/trellofront/src/components/boards/board.jsx":"12","/home/shecho/PycharmProjects/trellofront/src/components/lists/list.jsx":"13"},{"size":500,"mtime":1607745779342,"results":"14","hashOfConfig":"15"},{"size":2491,"mtime":1608251957855,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607745779342,"results":"17","hashOfConfig":"15"},{"size":251,"mtime":1608179611375,"results":"18","hashOfConfig":"15"},{"size":1119,"mtime":1607748962679,"results":"19","hashOfConfig":"15"},{"size":1012,"mtime":1608172107074,"results":"20","hashOfConfig":"15"},{"size":1248,"mtime":1608249398540,"results":"21","hashOfConfig":"15"},{"size":1761,"mtime":1607817268155,"results":"22","hashOfConfig":"15"},{"size":939,"mtime":1608270575082,"results":"23","hashOfConfig":"15"},{"size":713,"mtime":1608269915170,"results":"24","hashOfConfig":"15"},{"size":1088,"mtime":1608181782065,"results":"25","hashOfConfig":"15"},{"size":2565,"mtime":1608273608150,"results":"26","hashOfConfig":"15"},{"size":1015,"mtime":1608185519582,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"he7r4t",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/shecho/PycharmProjects/trellofront/src/index.js",[],["57","58"],"/home/shecho/PycharmProjects/trellofront/src/App.js",[],"/home/shecho/PycharmProjects/trellofront/src/reportWebVitals.js",[],"/home/shecho/PycharmProjects/trellofront/src/components/home/home.jsx",[],"/home/shecho/PycharmProjects/trellofront/src/components/login/login.jsx",[],"/home/shecho/PycharmProjects/trellofront/src/components/sortableContainer/sortableComponent.jsx",[],"/home/shecho/PycharmProjects/trellofront/src/components/register/register.jsx",[],"/home/shecho/PycharmProjects/trellofront/src/components/users/user.jsx",["59","60","61"],"import React, { useState, useEffect } from \"react\";\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport arrayMove from \"array-move\";\nfunction User() {\n  const [user, setUser] = useState(\"\");\n  useEffect(() => {\n    getUser();\n  }, []);\n  const getUser = async () => {\n    let url = `http://127.0.0.1:8000/users/api/v1/3/`;\n\n    let response = await fetch(url);\n    let res = await response.json();\n    console.log(res);\n    setUser(() => res);\n    console.log(user);\n  };\n\nconst SortableItem = SortableElement(({value}) => <li>{value}</li>)\n\nconst SortableList = SortableContainer(({items}) => {\n  return (\n    <ul>\n      {items.map((value, index) => (\n        <SortableItem key={`item-${value}`} index={index} value={value} />\n      ))}\n    </ul>\n  );\n});\n\n  return (\n    <div className=\"container text-center\">\n      <div className=\"card bg-dark text-light\">\n        <p>{user.name}</p>\n        <p>{user.lastname}</p>\n        <p>{user.email}</p>\n      </div>\n      <div className=\"card bg-dark text-light\">\n        <p>{user.name}</p>\n        <p>{user.lastname}</p>\n        <p>{user.email}</p>\n      </div>\n      <div className=\"card bg-dark text-light\">\n        <p>{user.name}</p>\n        <p>{user.lastname}</p>\n        <p>{user.email}</p>\n      </div>\n      <div className=\"card bg-dark text-light\">\n        <p>{user.name}</p>\n        <p>{user.lastname}</p>\n        <p>{user.email}</p>\n      </div>\n      <div className=\"card bg-dark text-light\">\n        <p>{user.name}</p>\n        <p>{user.lastname}</p>\n        <p>{user.email}</p>\n      </div>\n      <div className=\"card bg-dark text-light\">\n        <p>{user.name}</p>\n        <p>{user.lastname}</p>\n        <p>{user.email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default User;\n","/home/shecho/PycharmProjects/trellofront/src/components/boards/boardDetail.jsx",["62"],"/home/shecho/PycharmProjects/trellofront/src/components/boards/boards.jsx",[],"/home/shecho/PycharmProjects/trellofront/src/components/nav/nav.jsx",[],"/home/shecho/PycharmProjects/trellofront/src/components/boards/board.jsx",["63"],"import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./boards.css\";\n\nconst Board = (props) => {\n  const { id, description, name, members } = props.board;\n  let [favorite, setFavorite] = useState(props.board.favorite);\n\n  const addTofavorites = async () => {\n    // console.log(\"adding to favorites\");\n    let url = `http://127.0.0.1:8000/boards/${id}/`;\n    let data = {favorite:[...props.board.favorite, 3]}\n    console.log(data);\n    let res = await fetch(url, {\n      method: \"PATCH\",\n      headers:{\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    console.log(res);\n    setFavorite(() => !favorite);\n  };\n  const deleteBoard = async (id) => {\n    let url = `http://127.0.0.1:8000/boards/${id}/`;\n    console.log(url);\n    let request = await fetch(url, { method: \"DELETE\" });\n    console.log(request);\n    props.getBoards();\n  };\n  const handelSetFavorite = () => {\n    setFavorite(() => !favorite);\n  };\n  const activeStyles = {\n    color: \"rgb(83, 75, 87)\",\n  };\n  \n  return (\n    <div className=\"boards\" key={id}>\n      <div className=\"child_boards\">\n        <div className=\"head_boards\">\n          <i\n            className={`fa fa-heart-o ${members.includes(favorite) ? \"text-danger\" : \"\"} `}\n            aria-hidden=\"true\"\n            onClick={() => addTofavorites()}\n          />\n\n          <i\n            className=\"fa fa-trash text-danger\"\n            aria-hidden=\"true\"\n            onClick={() => deleteBoard(id)}\n          />\n\n          <NavLink to={`boards/${id}`} activeStyle={activeStyles}>\n            <li>\n              <i className=\"fa fa-ellipsis-h \" aria-hidden=\"true\" id={id} />\n            </li>\n          </NavLink>\n        </div>\n\n        <div className=\"card-body\">\n          <h5 className=\"card-title\"> {name}</h5>\n          <p> {description}</p>\n          <div className=\"d-flex justify-content-center \">\n            <button type=\"button\" className=\"btn btn-primary mr-1\">\n              <i className=\"fa fa-check bnt btn-success\" aria-hidden=\"true\" />{\" \"}\n              Participantes\n              <span className=\"badge bg-secondary p-1\">{members.length}</span>\n            </button>\n            <button type=\"button\" className=\"btn btn-primary\">\n              <i className=\"fa fa-plus bnt btn-success\" aria-hidden=\"true\" />{\" \"}\n              Invitados\n              <span className=\"badge bg-secondary p-1\"> </span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","/home/shecho/PycharmProjects/trellofront/src/components/lists/list.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":8,"column":6,"nodeType":"74","endLine":8,"endColumn":8,"suggestions":"75"},{"ruleId":"68","severity":1,"message":"76","line":21,"column":7,"nodeType":"70","messageId":"71","endLine":21,"endColumn":19},{"ruleId":"72","severity":1,"message":"77","line":13,"column":7,"nodeType":"74","endLine":13,"endColumn":9,"suggestions":"78"},{"ruleId":"68","severity":1,"message":"79","line":32,"column":9,"nodeType":"70","messageId":"71","endLine":32,"endColumn":26},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'arrayMove' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["82"],"'SortableList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["83"],"'handelSetFavorite' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [getUser]",{"range":"88","text":"89"},"Update the dependencies array to be: [getList]",{"range":"90","text":"91"},[257,259],"[getUser]",[355,357],"[getList]"]