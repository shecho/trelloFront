[{"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\index.js":"1","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\reportWebVitals.js":"2","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\App.js":"3","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\boards\\boards.jsx":"4","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\register\\register.jsx":"5","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\nav\\nav.jsx":"6","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\sortableContainer\\sortableComponent.jsx":"7","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\users\\user.jsx":"8","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\login\\login.jsx":"9","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\home\\home.jsx":"10","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\boards\\board.jsx":"11","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\boards\\boardDetail.jsx":"12","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\lists\\list.jsx":"13"},{"size":517,"mtime":1607981755659,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1607981755660,"results":"16","hashOfConfig":"15"},{"size":1994,"mtime":1608174522144,"results":"17","hashOfConfig":"15"},{"size":737,"mtime":1608178439670,"results":"18","hashOfConfig":"15"},{"size":1374,"mtime":1608098245231,"results":"19","hashOfConfig":"15"},{"size":1132,"mtime":1608168896187,"results":"20","hashOfConfig":"15"},{"size":1045,"mtime":1608098511294,"results":"21","hashOfConfig":"15"},{"size":1828,"mtime":1608098245233,"results":"22","hashOfConfig":"15"},{"size":1160,"mtime":1607981755655,"results":"23","hashOfConfig":"15"},{"size":263,"mtime":1608173281774,"results":"24","hashOfConfig":"15"},{"size":1199,"mtime":1608178758263,"results":"25","hashOfConfig":"15"},{"size":1138,"mtime":1608176501448,"results":"26","hashOfConfig":"15"},{"size":1448,"mtime":1608170409319,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qkescv",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\index.js",[],["59","60"],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\reportWebVitals.js",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\App.js",["61"],"import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport Nav from \"./components/nav/nav\";\r\nimport Login from \"./components/login/login\";\r\nimport Home from \"./components/home/home\";\r\nimport Boards from \"./components/boards/boards\";\r\nimport Register from \"./components/register/register\";\r\nimport User from \"./components/users/user\";\r\nimport SortableContainer from \"./components/sortableContainer/sortableComponent\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport BoardDetail from \"./components/boards/boardDetail\";\r\nimport SortableComponent from \"./components/sortableContainer/sortableComponent\";\r\nfunction App() {\r\n  const [loginStatus, setLoginStatus] = useState(true);\r\n  const handleLogStatus = (status) => {\r\n    setLoginStatus(() => !loginStatus);\r\n    console.log(loginStatus);\r\n  };\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <div className=\"navigation\">\r\n          <Nav />\r\n        </div>\r\n\r\n        <div className=\"appgeneral\">\r\n          <div className=\"sidebar\">\r\n            sidebar\r\n          </div>\r\n\r\n          <div className=\"body_cards\">\r\n          <Switch>\r\n            <Route exact path=\"/login\">\r\n              {loginStatus === true ? (\r\n                <Redirect from=\"/login\" to=\"/boards\" />\r\n              ) : (\r\n                <Login handleLogStatus={handleLogStatus} />\r\n              )}\r\n            </Route>\r\n\r\n            <Route exact path=\"/home\" component={Home} />\r\n            <Route exact path=\"/user\" component={User} />\r\n            <Route exact path=\"/boards\" component={Boards} />\r\n            <Route path=\"/boards/:id\" component={BoardDetail} />\r\n            <Route exact path=\"/test\" component={SortableComponent} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/\" component={Home} />\r\n          </Switch>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\boards\\boards.jsx",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\register\\register.jsx",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\nav\\nav.jsx",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\sortableContainer\\sortableComponent.jsx",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\users\\user.jsx",["62","63","64"],"import React, { useState, useEffect } from \"react\";\r\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport arrayMove from \"array-move\";\r\nfunction User() {\r\n  const [user, setUser] = useState(\"\");\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n  const getUser = async () => {\r\n    let url = `http://127.0.0.1:8000/users/api/v1/3/`;\r\n\r\n    let response = await fetch(url);\r\n    let res = await response.json();\r\n    console.log(res);\r\n    setUser(() => res);\r\n    console.log(user);\r\n  };\r\n\r\nconst SortableItem = SortableElement(({value}) => <li>{value}</li>)\r\n\r\nconst SortableList = SortableContainer(({items}) => {\r\n  return (\r\n    <ul>\r\n      {items.map((value, index) => (\r\n        <SortableItem key={`item-${value}`} index={index} value={value} />\r\n      ))}\r\n    </ul>\r\n  );\r\n});\r\n\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <div className=\"card bg-dark text-light\">\r\n        <p>{user.name}</p>\r\n        <p>{user.lastname}</p>\r\n        <p>{user.email}</p>\r\n      </div>\r\n      <div className=\"card bg-dark text-light\">\r\n        <p>{user.name}</p>\r\n        <p>{user.lastname}</p>\r\n        <p>{user.email}</p>\r\n      </div>\r\n      <div className=\"card bg-dark text-light\">\r\n        <p>{user.name}</p>\r\n        <p>{user.lastname}</p>\r\n        <p>{user.email}</p>\r\n      </div>\r\n      <div className=\"card bg-dark text-light\">\r\n        <p>{user.name}</p>\r\n        <p>{user.lastname}</p>\r\n        <p>{user.email}</p>\r\n      </div>\r\n      <div className=\"card bg-dark text-light\">\r\n        <p>{user.name}</p>\r\n        <p>{user.lastname}</p>\r\n        <p>{user.email}</p>\r\n      </div>\r\n      <div className=\"card bg-dark text-light\">\r\n        <p>{user.name}</p>\r\n        <p>{user.lastname}</p>\r\n        <p>{user.email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\login\\login.jsx",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\home\\home.jsx",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\boards\\board.jsx",[],"D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\boards\\boardDetail.jsx",["65","66","67"],"import React, { useState, useEffect } from \"react\";\r\nimport './boards.css'\r\n\r\n// import arrayMove from 'array-move';\r\nimport List from '../lists/list'\r\n\r\nconst BoardDetail = () => {\r\n  const [list, setList] = useState([]);\r\n  const [cards, setCards] = useState([]);\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n\r\n\r\n  // const getCards = async (id) => {\r\n  //   let url = `http://127.0.0.1:8000/list/${id}/cards`;\r\n  //   let response = await fetch(url);\r\n  //   console.log(response);\r\n  //   let res = await response.json();\r\n  //   console.log(res.results);\r\n  //   setCards(() => res.results);\r\n  //   console.log(cards);\r\n  // };\r\n  const getList = async () => {\r\n    let url = \"http://127.0.0.1:8000/list/\";\r\n    let response = await fetch(url);\r\n    console.log(response);\r\n    let res = await response.json();\r\n    console.log(res.results);\r\n    setList(() => res.results);\r\n    console.log(list);\r\n  };\r\n\r\n  return (\r\n    <div className=\"list\">\r\n        {list.map((list) => {\r\n          return (\r\n            <List list={list} key={list.id}/>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default BoardDetail;\r\n","D:\\Python\\roberto\\DjangoREST\\trelloFront\\src\\components\\lists\\list.jsx",["68"],"import React from \"react\";\r\n\r\nconst List = (props) => {\r\n  const { id, position, name, members } = props.list;\r\n  return (\r\n    <div className=\"text-center\" key={id}>\r\n      <div className=\"card bg-dark text-light\">\r\n          <h5 className=\"card-title \"> <span className='dx-2'> N°{position}</span> {name}</h5>\r\n        <div className=\"d-flex justify-content-center p-2 \">\r\n          <div className=\"m-2\">\r\n            <i className=\"fa fa-plus-circle text-success\" aria-hidden=\"true\" />\r\n          </div>\r\n          <div className=\"m-2\">\r\n            <i className=\"fa fa-trash text-danger\" aria-hidden=\"true\" />\r\n          </div>\r\n          <div className=\"d-flex justify-content-end p-2 \">\r\n            <i className=\"fa fa-ellipsis-h \" aria-hidden=\"true\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          \r\n          <div className=\"justify-content-center \">\r\n            <div>\r\n            card\r\n            </div>\r\n            <div>\r\n            card\r\n            </div>\r\n            <div>\r\n            card\r\n            </div>\r\n            <div>\r\n            card\r\n            </div>\r\n            <div>\r\n            card\r\n            </div>\r\n            <div>\r\n            card\r\n            </div>\r\n            <div>\r\n            card\r\n            </div>\r\n            <div>\r\n            card\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":9,"column":8,"nodeType":"75","messageId":"76","endLine":9,"endColumn":25},{"ruleId":"73","severity":1,"message":"77","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":17},{"ruleId":"78","severity":1,"message":"79","line":8,"column":6,"nodeType":"80","endLine":8,"endColumn":8,"suggestions":"81"},{"ruleId":"73","severity":1,"message":"82","line":21,"column":7,"nodeType":"75","messageId":"76","endLine":21,"endColumn":19},{"ruleId":"73","severity":1,"message":"83","line":9,"column":10,"nodeType":"75","messageId":"76","endLine":9,"endColumn":15},{"ruleId":"73","severity":1,"message":"84","line":9,"column":17,"nodeType":"75","messageId":"76","endLine":9,"endColumn":25},{"ruleId":"78","severity":1,"message":"85","line":12,"column":6,"nodeType":"80","endLine":12,"endColumn":8,"suggestions":"86"},{"ruleId":"73","severity":1,"message":"87","line":4,"column":31,"nodeType":"75","messageId":"76","endLine":4,"endColumn":38},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'SortableContainer' is defined but never used.","Identifier","unusedVar","'arrayMove' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["90"],"'SortableList' is assigned a value but never used.","'cards' is assigned a value but never used.","'setCards' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["91"],"'members' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [getUser]",{"range":"96","text":"97"},"Update the dependencies array to be: [getList]",{"range":"98","text":"99"},[264,266],"[getUser]",[309,311],"[getList]"]