[{"/home/shecho/PycharmProjects/trellofront/src/index.js":"1","/home/shecho/PycharmProjects/trellofront/src/App.js":"2","/home/shecho/PycharmProjects/trellofront/src/reportWebVitals.js":"3","/home/shecho/PycharmProjects/trellofront/src/components/login/login.jsx":"4","/home/shecho/PycharmProjects/trellofront/src/components/nav/nav.jsx":"5","/home/shecho/PycharmProjects/trellofront/src/components/register/register.jsx":"6","/home/shecho/PycharmProjects/trellofront/src/components/home/home.jsx":"7","/home/shecho/PycharmProjects/trellofront/src/components/boards/board.jsx":"8","/home/shecho/PycharmProjects/trellofront/src/components/boards/boards.jsx":"9","/home/shecho/PycharmProjects/trellofront/src/components/users/user.jsx":"10","/home/shecho/PycharmProjects/trellofront/src/components/sortableContainer/sortableComponent.jsx":"11","/home/shecho/PycharmProjects/trellofront/src/components/boards/boardDetail.jsx":"12","/home/shecho/PycharmProjects/trellofront/src/components/lists/list.jsx":"13"},{"size":500,"mtime":1607745779342,"results":"14","hashOfConfig":"15"},{"size":1807,"mtime":1608159758784,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607745779342,"results":"17","hashOfConfig":"15"},{"size":1119,"mtime":1607748962679,"results":"18","hashOfConfig":"15"},{"size":1170,"mtime":1608097994679,"results":"19","hashOfConfig":"15"},{"size":1313,"mtime":1607749492556,"results":"20","hashOfConfig":"15"},{"size":255,"mtime":1607751546974,"results":"21","hashOfConfig":"15"},{"size":1318,"mtime":1608146883379,"results":"22","hashOfConfig":"15"},{"size":713,"mtime":1608170360405,"results":"23","hashOfConfig":"15"},{"size":1761,"mtime":1607817268155,"results":"24","hashOfConfig":"15"},{"size":1012,"mtime":1608159743861,"results":"25","hashOfConfig":"15"},{"size":1109,"mtime":1608169510808,"results":"26","hashOfConfig":"15"},{"size":1394,"mtime":1608158856008,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"he7r4t",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},"/home/shecho/PycharmProjects/trellofront/src/index.js",[],["58","59"],"/home/shecho/PycharmProjects/trellofront/src/App.js",["60"],"import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Nav from \"./components/nav/nav\";\nimport Login from \"./components/login/login\";\nimport Home from \"./components/home/home\";\nimport Boards from \"./components/boards/boards\";\nimport Register from \"./components/register/register\";\nimport User from \"./components/users/user\";\nimport SortableContainer from \"./components/sortableContainer/sortableComponent\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport BoardDetail from \"./components/boards/boardDetail\";\nimport SortableComponent from \"./components/sortableContainer/sortableComponent\";\nfunction App() {\n  const [loginStatus, setLoginStatus] = useState(true);\n  const handleLogStatus = (status) => {\n    setLoginStatus(() => !loginStatus);\n    console.log(loginStatus);\n  };\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"\">\n          <Nav />\n        </div>\n\n        <div className=\"row justify-content-center\">\n          <Switch>\n            <Route exact path=\"/login\">\n              {loginStatus === true ? (\n                <Redirect from=\"/login\" to=\"/boards\" />\n              ) : (\n                <Login handleLogStatus={handleLogStatus} />\n              )}\n            </Route>\n\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/user\" component={User} />\n            <Route exact path=\"/boards\" component={Boards} />\n            <Route path=\"/boards/:id\" component={BoardDetail} />\n            <Route exact path=\"/test\" component={SortableComponent} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/\" component={Home} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/shecho/PycharmProjects/trellofront/src/reportWebVitals.js",[],"/home/shecho/PycharmProjects/trellofront/src/components/login/login.jsx",[],"/home/shecho/PycharmProjects/trellofront/src/components/nav/nav.jsx",[],"/home/shecho/PycharmProjects/trellofront/src/components/register/register.jsx",[],"/home/shecho/PycharmProjects/trellofront/src/components/home/home.jsx",[],"/home/shecho/PycharmProjects/trellofront/src/components/boards/board.jsx",[],"/home/shecho/PycharmProjects/trellofront/src/components/boards/boards.jsx",[],"/home/shecho/PycharmProjects/trellofront/src/components/users/user.jsx",["61","62","63"],"import React, { useState, useEffect } from \"react\";\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport arrayMove from \"array-move\";\nfunction User() {\n  const [user, setUser] = useState(\"\");\n  useEffect(() => {\n    getUser();\n  }, []);\n  const getUser = async () => {\n    let url = `http://127.0.0.1:8000/users/api/v1/3/`;\n\n    let response = await fetch(url);\n    let res = await response.json();\n    console.log(res);\n    setUser(() => res);\n    console.log(user);\n  };\n\nconst SortableItem = SortableElement(({value}) => <li>{value}</li>)\n\nconst SortableList = SortableContainer(({items}) => {\n  return (\n    <ul>\n      {items.map((value, index) => (\n        <SortableItem key={`item-${value}`} index={index} value={value} />\n      ))}\n    </ul>\n  );\n});\n\n  return (\n    <div className=\"container text-center\">\n      <div className=\"card bg-dark text-light\">\n        <p>{user.name}</p>\n        <p>{user.lastname}</p>\n        <p>{user.email}</p>\n      </div>\n      <div className=\"card bg-dark text-light\">\n        <p>{user.name}</p>\n        <p>{user.lastname}</p>\n        <p>{user.email}</p>\n      </div>\n      <div className=\"card bg-dark text-light\">\n        <p>{user.name}</p>\n        <p>{user.lastname}</p>\n        <p>{user.email}</p>\n      </div>\n      <div className=\"card bg-dark text-light\">\n        <p>{user.name}</p>\n        <p>{user.lastname}</p>\n        <p>{user.email}</p>\n      </div>\n      <div className=\"card bg-dark text-light\">\n        <p>{user.name}</p>\n        <p>{user.lastname}</p>\n        <p>{user.email}</p>\n      </div>\n      <div className=\"card bg-dark text-light\">\n        <p>{user.name}</p>\n        <p>{user.lastname}</p>\n        <p>{user.email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default User;\n","/home/shecho/PycharmProjects/trellofront/src/components/sortableContainer/sortableComponent.jsx",[],"/home/shecho/PycharmProjects/trellofront/src/components/boards/boardDetail.jsx",["64","65","66"],"/home/shecho/PycharmProjects/trellofront/src/components/lists/list.jsx",["67"],"import React from \"react\";\n\nconst List = (props) => {\n  const { id, position, name, members } = props.list;\n  return (\n    <div className=\"text-center\" key={id}>\n      <div className=\"card bg-dark text-light\">\n          <h5 className=\"card-title \"> <span className='dx-2'> NÂ°{position}</span> {name}</h5>\n        <div className=\"d-flex justify-content-center p-2 \">\n          <div className=\"m-2\">\n            <i className=\"fa fa-plus-circle text-success\" aria-hidden=\"true\" />\n          </div>\n          <div className=\"m-2\">\n            <i className=\"fa fa-trash text-danger\" aria-hidden=\"true\" />\n          </div>\n          <div className=\"d-flex justify-content-end p-2 \">\n            <i className=\"fa fa-ellipsis-h \" aria-hidden=\"true\" />\n          </div>\n        </div>\n        <div className=\"card-body\">\n          \n          <div className=\"justify-content-center \">\n            <div>\n            card\n            </div>\n            <div>\n            card\n            </div>\n            <div>\n            card\n            </div>\n            <div>\n            card\n            </div>\n            <div>\n            card\n            </div>\n            <div>\n            card\n            </div>\n            <div>\n            card\n            </div>\n            <div>\n            card\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":8,"nodeType":"74","messageId":"75","endLine":9,"endColumn":25},{"ruleId":"72","severity":1,"message":"76","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":17},{"ruleId":"77","severity":1,"message":"78","line":8,"column":6,"nodeType":"79","endLine":8,"endColumn":8,"suggestions":"80"},{"ruleId":"72","severity":1,"message":"81","line":21,"column":7,"nodeType":"74","messageId":"75","endLine":21,"endColumn":19},{"ruleId":"72","severity":1,"message":"82","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":15},{"ruleId":"72","severity":1,"message":"83","line":6,"column":17,"nodeType":"74","messageId":"75","endLine":6,"endColumn":25},{"ruleId":"77","severity":1,"message":"84","line":9,"column":6,"nodeType":"79","endLine":9,"endColumn":8,"suggestions":"85"},{"ruleId":"72","severity":1,"message":"86","line":4,"column":31,"nodeType":"74","messageId":"75","endLine":4,"endColumn":38},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'SortableContainer' is defined but never used.","Identifier","unusedVar","'arrayMove' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'SortableList' is assigned a value but never used.","'cards' is assigned a value but never used.","'setCards' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["90"],"'members' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [getUser]",{"range":"95","text":"96"},"Update the dependencies array to be: [getList]",{"range":"97","text":"98"},[257,259],"[getUser]",[236,238],"[getList]"]